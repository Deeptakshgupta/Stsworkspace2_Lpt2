package com.citi.WebConfiguratorService.model.o2ms;

import java.sql.Date;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.citi.WebConfiguratorService.model.wcs.Customer;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
@Data
@NoArgsConstructor 
@AllArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
@Entity
@Table(schema="o2ms", name="REPORTMAST")
public class OmsReports {


	
	/*
	 * private long id;
	 */
	
	
	
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "repoSeq")
	@SequenceGenerator(sequenceName = "report_seq", allocationSize = 1, name = "repoSeq")
	//@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "REPORTID", nullable = false)
	private Long reportId;
	
	@Id
	@Column(name = "REPORTNAME", nullable = false, unique=true)
	private String reportName;
	
	@Column(name = "VERSION", nullable = false)
	private String version;
	
	@Column(name = "ISPUBLISHED", nullable = false)
	private String isPublished;
	
	@Column(name = "AUTHOR", nullable = false)
	private String author;
	
	@Column(name = "CREATIONDATE", nullable = false)
	private Date creationDate;
	
	@Column(name = "REPORTXML", columnDefinition = "BLOB",nullable = false)
    @Lob
    @Basic(fetch = FetchType.LAZY)
	private byte[] reportXML;
	
	@Column(name = "CREATEDBYID", nullable = false)
	private String createdById;
	
//	@Column(name = "IMAGEPATH", columnDefinition = "BLOB",nullable = false)
//	@Lob
//	@Basic(fetch = FetchType.LAZY)
//	private byte[] imagePath;
	
	
//	@ManyToOne(fetch = FetchType.LAZY,targetEntity=Customer.class)
//    @JoinColumn(name = "CREATEDBYID", referencedColumnName = "customerId") 
//    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property="customerId")
//    private Customer omsRepocustomer;
	
	 @Transient
	 private String message;
	

}
