package com.citi.WebConfiguratorService.common;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.ViewResolver;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.web.servlet.view.InternalResourceView;
import org.springframework.web.servlet.view.InternalResourceViewResolver;

@Configuration
//@EnableWebMvc
//@EnableWebSecurity
//@EnableGlobalMethodSecurity(prePostEnabled = true)
public class WebMvcConfig implements WebMvcConfigurer {

//    @Override
//    public void addResourceHandlers(ResourceHandlerRegistry registry) {
//
//      registry.addResourceHandler("/**/*")
//        .addResourceLocations("classpath:/static")
//        .resourceChain(true)
//        .addResolver(new PathResourceResolver() {
//            @Override
//            protected Resource getResource(String resourcePath,
//                Resource location) throws IOException {
//                Resource requestedResource = location.createRelative(resourcePath);
//                return requestedResource.exists() && requestedResource.isReadable() ? requestedResource
//                : new ClassPathResource("/static/index.html");
//            }
//        });
//    }
    

    private static final String[] CLASSPATH_RESOURCE_LOCATIONS = {
            "classpath:/META-INF/resources/",
            "classpath:/resources/",
            "classpath:/static/",
            "classpath:/public/",
            "classpath:/static/cw-app/"
    };

//    @Override
//    public void addResourceHandlers(ResourceHandlerRegistry registry)
//    {
//        if (!registry.hasMappingForPattern("/**"))
//        {
//            registry.addResourceHandler("/**")
//                    .addResourceLocations(CLASSPATH_RESOURCE_LOCATIONS);
//        }
//    }

    @Override
    public void addCorsMappings(CorsRegistry registry)
    {
        registry.addMapping("/**")
                .allowedOrigins("http://localhost:4200","http://192.168.142.15:8081","http://192.168.142.15:8081/WebConfiguratorService",
                		"http://192.168.142.15:8085/OMSWebServices/rest/OMSSessionManagement/connectCabinet","http://ng5198:8081")
                //.allowedOriginPatterns("http://192.168.142.15:8081/WebConfiguratorService/*")
                .allowedHeaders("*").allowedMethods("*").exposedHeaders("access-control-allow-origin", "access-control-allow-credentials")
                .allowCredentials(true)
                .maxAge(3600);
    	//registry.addMapping("/**");
    }

    @Override
    public void addViewControllers(ViewControllerRegistry registry)
    {
        registry.addViewController("/").setViewName("index.html");
    }

    @Bean
    public ViewResolver internalResourceViewResolver()
    {
        InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();
        viewResolver.setViewClass(InternalResourceView.class);
        return viewResolver;
    }
    
//    @Bean
//    public SecurityFilterChain filterChain (HttpSecurity http) throws Exception 
//    {         
//    http
//    .csrf().disable()
//    .cors().disable(). 
//    }
    
}